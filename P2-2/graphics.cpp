#include "graphics.h"

#include "globals.h"

/*
In this file put all your graphical functions (don't forget to declare them first
in graphics.h). So when you want to draw something use this file. One cool function
to look at would be uLCD.blit() there are more like filled_rectangle etc... 
https://os.mbed.com/users/4180_1/notebook/ulcd-144-g2-128-by-128-color-lcd/
This website is a good resource.
*/

void draw_player(int u, int v, int key)
{
    int player1[121] = {
    0x00010001, 0x00000000, 0x00000101, 0xfffe33b8, 0xfffe33b8, 0xffff32b8, 0x00000000, 0x00000100, 0x00000100, 0x00010001, 0x00000101, 
    0x00000001, 0x00000100, 0xfffe32b9, 0xfffefefe, 0xfffe32b8, 0xffffffff, 0xffff33b8, 0x00000100, 0x00000100, 0x00010001, 0x00010001, 
    0x00000000, 0x00010001, 0xffff32b8, 0xffff33b8, 0xffff33b8, 0xfffe33b8, 0xffff33b9, 0x00000100, 0x00000001, 0x00000101, 0x00010100, 
    0x00010001, 0x00010000, 0xfffe33b9, 0xfffe32b8, 0xfffeffff, 0xffff32b8, 0xfffe32b8, 0x00000000, 0x00000100, 0x00010100, 0xffff5132, 
    0x00000000, 0x00000101, 0xff0808a6, 0xffff33b8, 0xfffe32b8, 0xfffe33b8, 0xff0808a7, 0x00010100, 0x00010001, 0xfffe5133, 0x00000000, 
    0xff0909a6, 0xff0909a6, 0xff0909a6, 0xff0809a7, 0xff0909a7, 0xff0908a7, 0xff0908a6, 0x00000101, 0xffff5133, 0x00010100, 0xffff5133, 
    0xff0908a6, 0x00000000, 0xff0908a6, 0xff0908a6, 0xff0908a6, 0xff0909a7, 0xff0809a7, 0xffff5032, 0xfffe5033, 0xfffe5033, 0x00000001, 
    0xff0909a7, 0x00010000, 0xff0909a6, 0xff0909a6, 0xff0909a6, 0xff0808a7, 0xff0808a7, 0x00000000, 0xfffe5032, 0x00000101, 0x00000001, 
    0x00000001, 0x00010001, 0xff0908a6, 0x00010100, 0x00010001, 0x00010101, 0xff0808a7, 0x00000100, 0x00000000, 0x00000000, 0x00000000, 
    0x00010000, 0x00000101, 0xff0909a7, 0x00000001, 0x00010000, 0x00010000, 0xff0909a6, 0x00000100, 0x00010101, 0x00010001, 0x00000001, 
    0x00000100, 0x00010001, 0xff0809a6, 0x00000000, 0x00000000, 0x00000101, 0xff0808a6, 0x00000101, 0x00000000, 0x00010101, 0x00000000
    };
    int player2[121] = {
    0x00010000, 0x00010101, 0x00000000, 0x00010000, 0x00000100, 0x00010001, 0x00000000, 0x00000000, 0x00010000, 0x00000001, 0x00000001, 
    0x00010000, 0x00000100, 0x00000100, 0xff0000c7, 0xff0101c6, 0xff0101c7, 0xff0101c7, 0xff0001c6, 0x00000101, 0x00000000, 0x00000101, 
    0x00000101, 0x00000001, 0x00000101, 0xff0001c7, 0xfffffffe, 0xff0100c6, 0xfffffffe, 0xff0001c6, 0x00000100, 0x00000100, 0x00000000, 
    0x00010000, 0x00010101, 0x00010101, 0xff0100c6, 0xff0101c6, 0xff0001c6, 0xff0001c6, 0xff0101c7, 0x00000101, 0x00000000, 0x00000001, 
    0x00000000, 0x00010101, 0x00010000, 0xffc6a701, 0xfffeffff, 0xfffeffff, 0xfffefffe, 0xffc6a601, 0x00010001, 0x00010100, 0x00010000, 
    0x00000000, 0xffc7a700, 0xffc7a601, 0xff0101c6, 0xffc6a700, 0xffc6a600, 0xffc6a601, 0xff0101c7, 0xffc7a601, 0xffc7a601, 0x00000100, 
    0x00010000, 0xffc6a601, 0x00010000, 0xff0100c6, 0xffc7a601, 0xffc6a600, 0xffc7a700, 0xff0000c7, 0x00010000, 0xffc6a701, 0x00010001, 
    0x00000101, 0x00010000, 0x00000000, 0xff0100c6, 0xff0101c7, 0xff0000c6, 0xff0001c6, 0xff0101c7, 0x00000001, 0x00000100, 0x00000000, 
    0x00000100, 0x00010001, 0x00000000, 0xff0101c6, 0xff0100c7, 0x00010001, 0xff0101c6, 0xff0001c7, 0x00010000, 0x00010000, 0x00010000, 
    0x00000100, 0x00000001, 0x00010100, 0xff0101c7, 0xff0100c7, 0x00010101, 0xff0000c6, 0xff0000c6, 0x00000101, 0x00000000, 0x00000000, 
    0x00000001, 0x00000001, 0x00010000, 0xff0000c6, 0xff0000c6, 0x00000100, 0xff0101c7, 0xff0001c6, 0x00000000, 0x00000100, 0x00000100
    };
    uLCD.BLIT(u, v, 11, 11, key == 1 ? player1 : player2);
    wait_us(250);
}

#define YELLOW 0xFFFF00
#define BROWN  0xD2691E
#define DIRT   BROWN
void draw_img(int u, int v, const char* img)
{
    int colors[11*11];
    for (int i = 0; i < 11*11; i++)
    {
        if (img[i] == 'R') colors[i] = RED;
        else if (img[i] == 'Y') colors[i] = YELLOW;
        else if (img[i] == 'G') colors[i] = GREEN;
        else if (img[i] == 'D') colors[i] = DIRT;
        else if (img[i] == '5') colors[i] = LGREY;
        else if (img[i] == '3') colors[i] = DGREY;
        else colors[i] = BLACK;
    }
    uLCD.BLIT(u, v, 11, 11, colors);
    wait_us(250); // Recovery time!
}

void draw_nothing(int u, int v)
{
    // Fill a tile with blackness
    uLCD.filled_rectangle(u, v, u+10, v+10, BLACK);
}

void draw_wall(int u, int v)
{
    uLCD.filled_rectangle(u, v, u+10, v+10, 0xCCCCCC);
}

void draw_plant(int u, int v)
{
    uLCD.filled_rectangle(u, v, u+10, v+10, GREEN);
}
void draw_npc(int u, int v)
{
    int npc[121] = {
0x00000101, 0x00010001, 0x00000000, 0x00000100, 0xff7600c6, 0xff7700c7, 0xff7600c6, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000100, 0x00000100, 0xff7601c6, 0xfffefeff, 0xff7701c6, 0xfffeffff, 0xff7601c6, 0x00000001, 0x00000001, 0x00010000, 
0x00010001, 0x00000100, 0x00000000, 0xff7600c7, 0xff7600c6, 0xff7601c6, 0xff7701c7, 0xff7600c7, 0x00000101, 0x00010101, 0x00000101, 
0x00000100, 0x00000100, 0x00010000, 0xff7700c6, 0xfffffefe, 0xffffffff, 0xfffefffe, 0xff7600c6, 0x00000000, 0x00000101, 0x00000100, 
0x00010000, 0x00010100, 0x00000001, 0xffeb2a0d, 0xff7600c6, 0xff7600c6, 0xff7601c6, 0xffea2b0c, 0x00010100, 0x00010000, 0x00010100, 
0x00000000, 0xffc7a600, 0xffc6a700, 0xffea2a0d, 0xff5efeea, 0xffea2a0c, 0xff5efeea, 0xffea2a0c, 0xffc6a700, 0xffc6a600, 0x00000000, 
0x00000000, 0xffc6a700, 0x00000101, 0xffea2a0c, 0xffea2a0c, 0xffea2b0c, 0xffeb2b0d, 0xffea2b0d, 0x00000001, 0xffc6a701, 0x00000100, 
0x00010000, 0x00000100, 0x00010000, 0xffeb2b0d, 0xffeb2b0d, 0xffeb2b0d, 0xffeb2b0d, 0xffea2b0c, 0x00000000, 0x00010101, 0x00000100, 
0x00000000, 0x00010101, 0x00000001, 0xffeb2a0d, 0xffeb2b0c, 0x00010000, 0xffeb2a0d, 0xffeb2a0d, 0x00010001, 0x00010101, 0x00010001, 
0x00010101, 0x00000000, 0x00010101, 0xffeb2b0d, 0xffeb2b0c, 0x00010000, 0xffeb2b0c, 0xffea2b0d, 0x00000000, 0x00000000, 0x00010000, 
0x00010100, 0x00010000, 0x00000000, 0xffea2a0d, 0xffeb2b0d, 0x00000000, 0xffea2b0d, 0xffea2a0c, 0x00000101, 0x00010000, 0x00010000
};
    uLCD.BLIT(u, v, 11, 11, npc);
    wait_us(250);
}
void draw_gbMan(int u, int v)
{
    int gbMan[121] =    {
0x00010100, 0x00010001, 0x00010001, 0xff155268, 0xff155269, 0xff145268, 0xff145268, 0xff155268, 0x00000000, 0x00000100, 0x00000100, 
0x00010000, 0x00000000, 0x00000000, 0xff155368, 0xff010000, 0xff145369, 0xff000000, 0xff155268, 0x00010000, 0x00000001, 0x00000001, 
0x00000000, 0x00010000, 0x00000101, 0xff155268, 0xff145368, 0xff155269, 0xff155368, 0xff155268, 0x00010001, 0xffc63600, 0xfffefeff, 
0x00000000, 0x00010100, 0x00010100, 0xff145368, 0xffffffff, 0xffffffff, 0xfffffeff, 0xff145268, 0x00000001, 0xfffffffe, 0xffc63700, 
0xff155369, 0x00010100, 0x00010000, 0xff000100, 0xff000101, 0xff010000, 0xff000001, 0xff010000, 0x00000100, 0xffc73701, 0x00000001, 
0xff155369, 0xff155268, 0xff155268, 0xff155268, 0xff155269, 0xff145369, 0xff155268, 0xff145369, 0xff155268, 0xfffefeff, 0x00000100, 
0x00000001, 0x00000100, 0x00000001, 0xff155268, 0xff155269, 0xff145268, 0xff155268, 0xff145268, 0x00000001, 0xffc63600, 0x00000000, 
0x00000000, 0x00010000, 0x00000000, 0xff155268, 0xff155369, 0xff155369, 0xff145268, 0xff155268, 0x00010100, 0xfffffefe, 0x00000101, 
0x00000001, 0x00000001, 0x00000101, 0xff155268, 0x00000001, 0x00000100, 0x00000101, 0xff155268, 0x00010000, 0x00010100, 0x00000001, 
0x00010100, 0x00000000, 0x00000000, 0xff145268, 0x00000000, 0x00010000, 0x00000100, 0xff155268, 0x00010100, 0x00010100, 0x00000100, 
0x00010100, 0x00010100, 0x00010100, 0xff155269, 0x00000100, 0x00000100, 0x00000001, 0xff155268, 0x00010001, 0x00010000, 0x00010100
};
    uLCD.BLIT(u, v, 11, 11, gbMan);
    wait_us(250);
}
void draw_stairs(int u, int v)
{
    int stairs[121] = {
0xff414040, 0x00000001, 0x00000100, 0x00010100, 0x00000000, 0x00000100, 0x00010000, 0x00000100, 0x00000100, 0x00010000, 0x00000000, 
0xff404041, 0xff414041, 0x00000000, 0x00000000, 0x00000001, 0x00000001, 0x00000101, 0x00010100, 0x00010001, 0x00000001, 0x00000100, 
0xff414041, 0xff404040, 0xff404140, 0x00000000, 0x00010000, 0x00000000, 0x00010000, 0x00000000, 0x00010100, 0x00010101, 0x00000101, 
0xff404140, 0xff414041, 0xff404141, 0xff414140, 0x00010000, 0x00010001, 0x00000000, 0x00010001, 0x00000001, 0x00000000, 0x00010001, 
0xff414041, 0xff404140, 0xff414140, 0xff414041, 0xff414040, 0x00000000, 0x00000000, 0x00000000, 0x00010000, 0x00000001, 0x00000100, 
0xff414040, 0xff404041, 0xff404141, 0xff414041, 0xff414040, 0xff414140, 0x00010101, 0x00010000, 0x00010000, 0x00000000, 0x00000101, 
0xff404041, 0xff414041, 0xff414141, 0xff404141, 0xff414141, 0xff414041, 0xff414041, 0x00000001, 0x00000100, 0x00000101, 0x00010100, 
0xff414141, 0xff414140, 0xff414141, 0xff404140, 0xff404140, 0xff414141, 0xff414140, 0xff404041, 0x00000000, 0x00010101, 0x00000000, 
0xff404041, 0xff414141, 0xff414140, 0xff404141, 0xff414141, 0xff404141, 0xff404141, 0xff414140, 0xff404141, 0x00000101, 0x00000000, 
0xff414141, 0xff404141, 0xff404140, 0xff404141, 0xff404141, 0xff404141, 0xff404041, 0xff404041, 0xff414141, 0xff414041, 0x00000000, 
0xff404141, 0xff414141, 0xff414040, 0xff404041, 0xff414141, 0xff414141, 0xff414141, 0xff404141, 0xff404041, 0xff414141, 0xff414041
};
    uLCD.BLIT(u, v, 11, 11, stairs);
    wait_us(250);
}
void draw_milk(int u, int v) 
{
    int milk[121] = {
0x00010001, 0x00000000, 0xff636361, 0x00010001, 0x00010001, 0x00000100, 0x00000001, 0x00000000, 0x00000100, 0xff636260, 0x00000101, 
0x00010000, 0x00000101, 0xff636360, 0xfffeffff, 0xfffefeff, 0xfffffffe, 0xfffeffff, 0xfffefefe, 0xfffffeff, 0xff626260, 0x00000100, 
0x00000001, 0x00010101, 0xff626261, 0xfffefffe, 0xfffffefe, 0xfffffefe, 0xfffffefe, 0xfffeffff, 0xfffffeff, 0xff626360, 0x00010001, 
0x00000100, 0x00000000, 0xff626260, 0xfffeffff, 0xfffffefe, 0xfffeffff, 0xfffffeff, 0xffffffff, 0xfffeffff, 0xff626361, 0x00010100, 
0x00000100, 0x00000100, 0xff626360, 0xffbcbcbd, 0xfffffefe, 0xfffefffe, 0xfffffefe, 0xfffffffe, 0xffbcbcbd, 0xff626361, 0x00000000, 
0x00010001, 0x00010000, 0xff626361, 0xffbcbcbc, 0xfffffeff, 0xfffefefe, 0xfffffefe, 0xfffffffe, 0xffbcbcbc, 0xff626361, 0x00000100, 
0x00000000, 0x00000000, 0xff636360, 0xffbcbdbc, 0xfffffefe, 0xfffffffe, 0xfffefeff, 0xfffefffe, 0xffbdbcbd, 0xff626360, 0x00000101, 
0x00010000, 0x00000000, 0xff636360, 0xffbdbcbd, 0xfffeffff, 0xfffefefe, 0xfffefeff, 0xfffeffff, 0xffbcbcbc, 0xff626261, 0x00000000, 
0x00000000, 0x00010100, 0xff626260, 0xffbdbcbd, 0xfffefefe, 0xffffffff, 0xfffeffff, 0xfffefffe, 0xffbcbcbc, 0xff636260, 0x00000100, 
0x00000001, 0x00000001, 0xff626360, 0xffbdbcbd, 0xffbcbdbd, 0xfffffeff, 0xfffefefe, 0xffbdbdbc, 0xffbcbdbd, 0xff626261, 0x00000101, 
0x00000000, 0x00000101, 0xff626361, 0xffbdbdbc, 0xffbcbdbd, 0xffbcbdbc, 0xffbcbdbc, 0xffbdbcbc, 0xffbdbcbd, 0xff626260, 0x00000000
};
    uLCD.BLIT(u, v, 11, 11, milk);
    wait_us(250);
}    
void draw_cookie(int u, int v)
{
    int cookie[121] = {
0x00000000, 0x00000000, 0x00010000, 0xff145268, 0xff155268, 0xff155369, 0xff155268, 0xff155269, 0x00010100, 0x00010100, 0x00010000, 
0x00000101, 0xff145269, 0xff155268, 0xff155268, 0xff145268, 0xff155368, 0xff145268, 0xff145269, 0xff145268, 0xff155269, 0x00000001, 
0x00010101, 0xff145369, 0xff155368, 0xff145269, 0xff132537, 0xff145269, 0xff122436, 0xff155369, 0xff145268, 0xff145269, 0x00000101, 
0xff155269, 0xff145268, 0xff132436, 0xff145369, 0xff155269, 0xff155268, 0xff155268, 0xff145368, 0xff145268, 0xff145368, 0xff155269, 
0xff145268, 0xff145269, 0xff145268, 0xff155268, 0xff155269, 0xff155269, 0xff155369, 0xff155269, 0xff122537, 0xff145268, 0xff155268, 
0xff145268, 0xff155268, 0xff155268, 0xff155269, 0xff132536, 0xff145269, 0xff155268, 0xff155368, 0xff155368, 0xff155268, 0xff145268, 
0xff155368, 0xff132437, 0xff145368, 0xff155269, 0xff145368, 0xff155268, 0xff122537, 0xff155269, 0xff155368, 0xff155269, 0xff155268, 
0xff145269, 0xff145269, 0xff155269, 0xff155268, 0xff145369, 0xff155368, 0xff145368, 0xff155268, 0xff155269, 0xff145269, 0xff155269, 
0x00010100, 0xff145368, 0xff155369, 0xff132537, 0xff155269, 0xff145368, 0xff145268, 0xff122437, 0xff155269, 0xff155368, 0x00010101, 
0x00000001, 0xff145268, 0xff155368, 0xff155369, 0xff155269, 0xff145369, 0xff145268, 0xff155268, 0xff155268, 0xff155268, 0x00010001, 
0x00000001, 0x00010101, 0x00000100, 0xff145368, 0xff145268, 0xff155269, 0xff155268, 0xff155268, 0x00000100, 0x00010001, 0x00000100
};
    uLCD.BLIT(u, v, 11, 11, cookie);
    wait_us(250);
}
void draw_door(int u, int v)
{
    int door[121] = {0x00010000, 0x00000100, 0x00000101, 0x00010001, 0x00010001, 0x00000001, 0x00000000, 0x00000100, 0x00010001, 0x00010101, 0x00000001, 
0x00010001, 0x00010001, 0x00000001, 0x00010100, 0x00000101, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000101, 0x00000100, 
0x00000000, 0x00000001, 0x00010001, 0x00010000, 0x00000101, 0x00000000, 0x00000000, 0x00010000, 0x00000000, 0x00000100, 0x00010000, 
0x00000100, 0x00010001, 0x00010001, 0x00000101, 0x00000100, 0x00000001, 0x00010000, 0x00010001, 0x00010101, 0x00010000, 0x00000000, 
0xff42d5fe, 0xff43d5fe, 0xff42d5ff, 0xff42d4fe, 0xff42d5ff, 0xff43d4ff, 0xff42d4fe, 0xff42d5ff, 0xff43d5fe, 0xff43d5fe, 0xff42d4ff, 
0xff42d4fe, 0xff43d5ff, 0xff43d4ff, 0xff42d5ff, 0xff42d4fe, 0xff42d5fe, 0xff42d4ff, 0xff43d4fe, 0xff43d5ff, 0xff43d4fe, 0xff43d5fe, 
0xff43d4ff, 0xff43d4ff, 0xff43d4ff, 0xff42d4fe, 0xff42d4fe, 0xff43d4fe, 0xff43d4fe, 0xff42d4ff, 0xff42d4ff, 0xff43d4fe, 0xff42d4ff, 
0xff43d4ff, 0xff42d4ff, 0xff42d5ff, 0xff42d4fe, 0xff43d4ff, 0xff42d4ff, 0xff42d4ff, 0xff42d4ff, 0xff42d4fe, 0xff43d5ff, 0xff42d4ff, 
0xff42d4fe, 0xff42d4ff, 0xff42d5ff, 0xff42d4ff, 0xff42d4fe, 0xff42d4ff, 0xff42d4ff, 0xff42d4ff, 0xff43d4fe, 0xff43d4fe, 0xff42d5ff, 
0xff42d4ff, 0xff42d4fe, 0xff43d5ff, 0xff42d5fe, 0xff42d5ff, 0xff43d5ff, 0xff42d5fe, 0xff42d4fe, 0xff43d4ff, 0xff42d4fe, 0xff42d4ff, 
0x00000001, 0x00000001, 0x00000000, 0x00000101, 0x00000001, 0x00010000, 0x00000100, 0x00010000, 0x00010000, 0x00000101, 0x00000000
};
    uLCD.BLIT(u, v, 11, 11, door);
    wait_us(250);
}
void draw_good_fly(int u, int v)
{
    int fly[121] = {0xff010000, 0xff010000, 0x00010100, 0x00000001, 0x00000000, 0x00010101, 0xfffeffff, 0xfffefffe, 0x00000001, 0x00010001, 0x00010100, 
0xff000001, 0xff000000, 0xff000001, 0x00000001, 0x00000001, 0x00000000, 0x00010000, 0xffffffff, 0x00010001, 0x00000001, 0x00000000, 
0x00000000, 0xff000100, 0xff010100, 0xff000000, 0x00000100, 0xff000100, 0xff000000, 0xff000000, 0x00010000, 0x00010100, 0x00000100, 
0x00000101, 0x00000000, 0xff010000, 0xff010101, 0xff000000, 0xff000000, 0xfffffefe, 0xff010100, 0xff010000, 0xffffffff, 0xffffffff, 
0x00010000, 0x00010100, 0x00010001, 0xff010100, 0xff1210a3, 0xff000101, 0xff010000, 0xfffeffff, 0xff010101, 0x00010101, 0xfffffffe, 
0x00010000, 0x00000000, 0xff010000, 0xff1311a3, 0xff1211a2, 0xff1311a2, 0xff010000, 0xff000001, 0xff010000, 0x00000000, 0x00010001, 
0x00000001, 0xff000000, 0xff1211a2, 0xff1311a3, 0xff43ceeb, 0xff1310a2, 0xff1311a2, 0xff000001, 0x00000101, 0x00010000, 0x00000101, 
0xff000000, 0xff1311a3, 0xff42cfea, 0xff1311a3, 0xff1211a2, 0xff1311a3, 0xff010000, 0xff000101, 0xff000000, 0x00010001, 0x00010001, 
0xff010100, 0xff1211a2, 0xff1311a2, 0xff42cfea, 0xff1310a2, 0xff010000, 0x00010001, 0xff000001, 0xff000000, 0xff000101, 0x00010101, 
0x00000001, 0xff000101, 0xff1310a2, 0xff1310a2, 0xff000000, 0x00010000, 0x00000001, 0x00000001, 0xff000101, 0xff000100, 0xff010000, 
0x00000101, 0x00010001, 0xff000000, 0xff010000, 0x00010000, 0x00010001, 0x00000100, 0x00000000, 0x00000101, 0xff010101, 0xff010001
}; 
    uLCD.BLIT(u, v, 11, 11, fly);
    wait_us(250);
}
void draw_bad_fly(int u, int v)
{
    int fly[121] = {0xff000001, 0xff010000, 0x00010001, 0x00000100, 0x00010100, 0x00000101, 0xfffefeff, 0xfffffffe, 0x00000001, 0x00010000, 0x00000100, 
0xff000100, 0xff010001, 0xff010000, 0x00010101, 0x00000001, 0x00000000, 0x00010000, 0xfffffeff, 0x00000000, 0x00010000, 0x00000000, 
0x00010000, 0xff000101, 0xff000101, 0xff000101, 0x00000000, 0xff000100, 0xff000000, 0xff010101, 0x00000100, 0x00010001, 0x00000000, 
0x00000000, 0x00010000, 0xff000100, 0xff010100, 0xff000101, 0xff000100, 0xfffffeff, 0xff000101, 0xff000101, 0xfffefeff, 0xffffffff, 
0x00010000, 0x00000001, 0x00000001, 0xff000100, 0xff13a311, 0xff010000, 0xff010101, 0xfffffefe, 0xff010000, 0x00000100, 0xfffefeff, 
0x00000001, 0x00000000, 0xff010001, 0xff12a210, 0xff12a211, 0xff13a311, 0xff010001, 0xff000100, 0xff000000, 0x00010100, 0x00000001, 
0x00000000, 0xff010101, 0xff13a211, 0xff13a210, 0xff42eacf, 0xff12a211, 0xff13a310, 0xff010000, 0x00000101, 0x00000100, 0x00010001, 
0xff010000, 0xff12a211, 0xff42ebce, 0xff13a210, 0xff13a210, 0xff12a311, 0xff000100, 0xff000101, 0xff010001, 0x00010000, 0x00000001, 
0xff010001, 0xff12a311, 0xff13a310, 0xff43eace, 0xff13a210, 0xff000000, 0x00000001, 0xff000001, 0xff000000, 0xff010001, 0x00000000, 
0x00010100, 0xff000100, 0xff12a211, 0xff13a311, 0xff010000, 0x00000000, 0x00000001, 0x00000000, 0xff000000, 0xff000001, 0xff000101, 
0x00000101, 0x00000101, 0xff000000, 0xff000100, 0x00010001, 0x00000101, 0x00000001, 0x00000000, 0x00000000, 0xff000001, 0xff010101
};
    uLCD.BLIT(u, v, 11, 11, fly);
    wait_us(250);
}
void draw_upper_status(int x, int y, int time_remaining, int time_spent)
{
    // Draw Upper border of status bar
    uLCD.line(0, 9, 127, 9, GREEN);
    
    // Add other status info drawing code here
    uLCD.textbackground_color(TRANSPARENT);
    uLCD.locate(1, 0);
    uLCD.color(0xFFFFFF);
    if (x < 10 && y < 10) uLCD.printf("(%d, %d)  ", x, y);
    else if (x < 10 || y < 10) uLCD.printf("(%d, %d) ", x, y);
    else uLCD.printf("(%d, %d)", x, y);
    uLCD.locate(10, 0); 
    if (time_remaining < 100)
    {
        uLCD.color(0xFF0000);
        if (time_remaining < 10) uLCD.printf("%d  ", time_remaining);
        else uLCD.printf("%d ", time_remaining);
    }
    else uLCD.printf("%d", time_remaining);
    uLCD.color(0xFFFFFF);
    uLCD.locate(14, 0);
    uLCD.printf("%d", time_spent);
}

void draw_lower_status(int hasKey, int defeatMonster)
{
    // Draw Lower border of status bar
    uLCD.line(0, 118, 127, 118, GREEN);
    
    // Add other status info drawing code here
    uLCD.locate(0,15);
    if (!defeatMonster) uLCD.printf("Defeat the Monster");
    else if (defeatMonster & !hasKey) uLCD.printf("Find NPC for key!");
    else if (defeatMonster & hasKey) uLCD.printf("Unlock the door!");
}

void draw_border()
{
    uLCD.filled_rectangle(0,     9, 127,  14, WHITE); // Top
    uLCD.filled_rectangle(0,    13,   2, 114, WHITE); // Left
    uLCD.filled_rectangle(0,   114, 127, 117, WHITE); // Bottom
    uLCD.filled_rectangle(124,  14, 127, 117, WHITE); // Right
}


